import "hashes/sha256/512bitPadded" as sha256;
from "ecc/babyjubjubParams" import BabyJubJubParams;
import "signatures/verifyEddsa.code" as verifyEddsa;
import "ecc/babyjubjubParams.code" as context;

def verifyMin(u32 min, u32[8] name, u32[8] value, field[2] R, field S, field[2] A, u32[8] M0, u32[8] M1) -> bool {
    BabyJubJubParams context = context();
    bool isVerified = verifyEddsa(R, S, A, M0, M1, context);

    u32[8] h = sha256(name, value);

    bool isHash = h == M0;
    bool inRange = min < value[7];

    return isVerified && isHash && inRange;
}

def main(u32 min1, private u32[8] name1, private u32[8] value1, private field[2] R1, private field S1, field[2] A1, u32[8] M01, u32[8] M11, u32 min2, private u32[8] name2, private u32[8] value2, private field[2] R2, private field S2, field[2] A2, u32[8] M02, u32[8] M12, u32 min3, private u32[8] name3, private u32[8] value3, private field[2] R3, private field S3, field[2] A3, u32[8] M03, u32[8] M13, u32 min4, private u32[8] name4, private u32[8] value4, private field[2] R4, private field S4, field[2] A4, u32[8] M04, u32[8] M14, u32 min5, private u32[8] name5, private u32[8] value5, private field[2] R5, private field S5, field[2] A5, u32[8] M05, u32[8] M15) -> bool {
    return verifyMin(min1, name1, value1, R1, S1, A1, M01, M11) && verifyMin(min2, name2, value2, R2, S2, A2, M02, M12) && verifyMin(min3, name3, value3, R3, S3, A3, M03, M13) && verifyMin(min4, name4, value4, R4, S4, A4, M04, M14) && verifyMin(min5, name5, value5, R5, S5, A5, M05, M15);
}
