load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "did",
    srcs = [
        "batch.go",
        "handler.go",
        "ion.go",
        "key.go",
        "model.go",
        "service.go",
        "storage.go",
        "web.go",
    ],
    importpath = "github.com/fapiper/onchain-access-control/pkg/service/did",
    visibility = ["//visibility:public"],
    deps = [
        "//config",
        "//internal/util",
        "//pkg/framework",
        "//pkg/service/common",
        "//pkg/service/did/resolution",
        "//pkg/service/keystore",
        "//pkg/storage",
        "@com_github_goccy_go_json//:go-json",
        "@com_github_google_uuid//:uuid",
        "@com_github_lestrrat_go_jwx_v2//jws",
        "@com_github_mr_tron_base58//:base58",
        "@com_github_pkg_errors//:errors",
        "@com_github_sirupsen_logrus//:logrus",
        "@com_github_tbd54566975_ssi_sdk//crypto",
        "@com_github_tbd54566975_ssi_sdk//crypto/jwx",
        "@com_github_tbd54566975_ssi_sdk//did",
        "@com_github_tbd54566975_ssi_sdk//did/ion",
        "@com_github_tbd54566975_ssi_sdk//did/key",
        "@com_github_tbd54566975_ssi_sdk//did/resolution",
        "@com_github_tbd54566975_ssi_sdk//did/web",
        "@com_github_tbd54566975_ssi_sdk//util",
    ],
)

go_test(
    name = "did_test",
    srcs = [
        "ion_test.go",
        "storage_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":did"],
    embedsrcs = ["testdata/basic_did_resolution.json"],
    deps = [
        "//config",
        "//pkg/service/keystore",
        "//pkg/storage",
        "//pkg/testutil",
        "@com_github_goccy_go_json//:go-json",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@com_github_tbd54566975_ssi_sdk//crypto",
        "@com_github_tbd54566975_ssi_sdk//crypto/jwx",
        "@com_github_tbd54566975_ssi_sdk//did",
        "@com_github_tbd54566975_ssi_sdk//did/ion",
        "@in_gopkg_h2non_gock_v1//:gock_v1",
    ],
)
